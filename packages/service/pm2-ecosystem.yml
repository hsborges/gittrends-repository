apps:
  - name: github-proxy-server
    interpreter: npx
    interpreter_args: --node-arg="-r dotenv/config -r pretty-error/start"
    script: github-proxy-server
    args: --port 3000 --request-interval 50 --tokens tokens.txt
    cron_restart: "0 * * * *"
    error_file: /dev/null
    env:
      DEBUG: "github-proxy"
      DEBUG_HIDE_DATE: true

  - name: gittrends-scheduler
    script: scheduler.js
    args: all
    instance_var: INSTANCE_ID
    cron_restart: "0 * * * *"
    autorestart: false

  - name: gittrends-repos
    script: updater.js
    args: repos --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-stargazers
    script: updater.js
    args: stargazers --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-watchers
    script: updater.js
    args: watchers --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-issues
    script: updater.js
    args: issues --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-pulls
    script: updater.js
    args: pulls --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-tags
    script: updater.js
    args: tags --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-releases
    script: updater.js
    args: releases --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-dependencies
    script: updater.js
    args: dependencies --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID

  - name: gittrends-users
    script: updater.js
    args: users --workers 1
    instances: 1,
    exec_mode: cluster
    instance_var: INSTANCE_ID
